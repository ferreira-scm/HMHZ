# plotting community

library(ggplot2)
library(reshape)
library(phyloseq, lib="/usr/local/lib/R/site-library/")
library(data.table)
#library(parallel)
library(microbiome)
#library("pheatmap")
library(plyr)
library(dplyr)
library(gridExtra)
library(grid)
library(vegan)
library(tidyr)
library(tidyverse)
#library(geosphere)
library(ggpubr)

library(RColorBrewer)
library(metagMisc)

PS=readRDS(file="tmp/PSpre.R")
pPS=readRDS(file="tmp/pPSpre.R")
get_taxa_unique(pPS, "superkingdom")

source("bin/Functions.R")

## prevalence plotting
prevdf = apply(X = otu_table(pPS),
               MARGIN = ifelse(taxa_are_rows(pPS), yes = 1, no = 2),
               FUN = function(x){sum(x > 0)})
# Add taxonomy and total read counts to this data.frame

prevdf = data.frame(Prevalence = prevdf,
                    TotalAbundance = taxa_sums(pPS),
                    tax_table(pPS))
plyr::ddply(prevdf, "phylum", function(df1){cbind(mean(df1$Prevalence),sum(df1$Prevalence))})
# Subset to the remaining phyla

prevdf1 = subset(prevdf, phylum %in% get_taxa_unique(pPS, "phylum"))

pdf("fig/prevPhyla.pdf")

ggplot(prevdf1, aes(TotalAbundance, Prevalence / nsamples(pPS),color=phylum)) +
# Include a guess for parameter
    geom_hline(yintercept = 0.05, alpha = 0.5, linetype = 2) +
    geom_point(size = 2, alpha = 0.7) +
    scale_x_log10() +
    xlab("Total Abundance") +
    ylab("Prevalence [Frac. Samples]") +
    facet_wrap(~phylum) + theme(legend.position="none")

dev.off()

# Abundance plotting at phylum level
## Phylum
relphy=summarize_taxa(PS, "phylum", "Mouse_ID")
phylnames=unique(relphy$phylum) #36 phyla
phylnames
relphySorted <- relphy %>%
    mutate(phylum = fct_reorder(phylum, meanRA))
relphySorted %>%
    group_by(phylum)%>%
    mutate(phylum_avg=mean(meanRA))%>%
    mutate(Main_phylum=phylum_avg>=0.01) -> relphySorted
relphySorted%>%
    mutate(phylum=fct_reorder(phylum, meanRA, .fun="mean"))%>%
    summarise(no_rows = length(phylum))%>%
    mutate(Prev_phylum= (no_rows/657)*100)%>%
    mutate(High_prev= Prev_phylum>=30)-> relphyPrev
(relphySorted)

ggplot(relphySorted, aes(x = phylum, y = meanRA, color= phylum)) +
    coord_flip() +
        scale_y_continuous(limits = c(0, 1), expand = c(0.005, 0.005)) +
    labs(x = NULL, y = "Relative abundance")+
          theme(legend.position = "none")+
      #theme_classic()+
      #geom_hline(aes(yintercept = sample_avg), color = "gray70", size = 0.6) +
      geom_jitter(size = 2, alpha = 0.5, width = 0.2)+
    stat_summary(fun = mean, geom = "point", size = 1, color= "black")+
    theme_minimal()+
    theme(legend.position="non")-> phyAb

png(filename = "fig/BacAbundance_phyla.png",
        width =7, height = 5, units = "in", res= 300)
phyAb
dev.off()

## prevalence plotting
prevdf = apply(X = otu_table(pPS),
               MARGIN = ifelse(taxa_are_rows(pPS), yes = 1, no = 2),
               FUN = function(x){sum(x > 0)})
# Add taxonomy and total read counts to this data.frame

prevdf = data.frame(Prevalence = prevdf,
                    TotalAbundance = taxa_sums(pPS),
                    tax_table(pPS))
plyr::ddply(prevdf, "phylum", function(df1){cbind(mean(df1$Prevalence),sum(df1$Prevalence))})
# Subset to the remaining phyla

prevdf1 = subset(prevdf, phylum %in% get_taxa_unique(pPS, "phylum"))

pdf("fig/prevPhyla.pdf")
ggplot(prevdf1, aes(TotalAbundance, Prevalence / nsamples(pPS),color=phylum)) +
# Include a guess for parameter
    geom_hline(yintercept = 0.05, alpha = 0.5, linetype = 2) +
    geom_point(size = 2, alpha = 0.7) +
    scale_x_log10() +
    xlab("Total Abundance") +
    ylab("Prevalence [Frac. Samples]") +
    facet_wrap(~phylum) + theme(legend.position="none")
dev.off()

# Abundance plotting at phylum level
## Phylum
relphy=summarize_taxa(bPS, "phylum", "Mouse_ID")
phylnames=unique(relphy$phylum) #36 phyla

phylnames

relphySorted <- relphy %>%
    mutate(phylum = fct_reorder(phylum, meanRA))
relphySorted %>%
    group_by(phylum)%>%
    mutate(phylum_avg=mean(meanRA))%>%
    mutate(Main_phylum=phylum_avg>=0.01) -> relphySorted
relphySorted%>%
    mutate(phylum=fct_reorder(phylum, meanRA, .fun="mean"))%>%
    summarise(no_rows = length(phylum))%>%
    mutate(Prev_phylum= (no_rows/657)*100)%>%
    mutate(High_prev= Prev_phylum>=30)-> relphyPrev
(relphySorted)

ggplot(relphySorted, aes(x = phylum, y = meanRA, color= phylum)) +
    coord_flip() +
        scale_y_continuous(limits = c(0, 1), expand = c(0.005, 0.005)) +
    labs(x = NULL, y = "Relative abundance")+
          theme(legend.position = "none")+
      #theme_classic()+
      #geom_hline(aes(yintercept = sample_avg), color = "gray70", size = 0.6) +
      geom_jitter(size = 2, alpha = 0.5, width = 0.2)+
    stat_summary(fun = mean, geom = "point", size = 1, color= "black")+
    theme_minimal()+
    theme(legend.position="non")-> phyAb

png(filename = "fig/BacAbundance_phyla.png",
        width =7, height = 5, units = "in", res= 300)
phyAb
dev.off()



get_taxa_unique(PS, "family")
PSTSS1@sam_data$Status


### Parasite plotting
##########################################################
##########################################################
euPS <- subset_taxa(PS, superkingdom%in%"Eukaryota")
baPS<- subset_taxa(PS, superkingdom%in%"Bacteria")

PSnem <- subset_taxa(euPS, phylum%in%"Nematoda")
PSapi <- subset_taxa(euPS, phylum%in%"Apicomplexa")
PSpla <- subset_taxa(euPS, phylum%in%"Platyhelminthes")

sample_data(PSnem)$all <- "one"
sample_data(PSapi)$all <- "one"
sample_data(PSpla)$all <- "one"
sample_data(euPS)$all <- "one"
sample_data(baPS)$all <- "one"

EUKrelF <- summarize_taxa(euPS, "family", "all")
BACrelF <- summarize_taxa(baPS, "family", "all")

write.csv(BACrelF, "tmp/BACrelF.csv")
write.csv(EUKrelF, "tmp/EUKrelF.csv")


# 7 families within phylum Nematoda (+1 NA)
relNem <- summarize_taxa(PSnem, "family", "all")

### tax_glom removes NA's :(
### To add the relative abundance, I need to modify the function summarize_taxa()
Nemphy <- tax_glom(PSnem, "family")
x = taxa_sums(Nemphy)
keepTaxa = (x / sum(x))
names(keepTaxa) == taxa_names(Nemphy)
kt <- data.frame(relA=keepTaxa, taxa=tax_table(Nemphy)[,5])
rownames(kt) <- NULL
kt$percentageA <- kt$relA*100

relNem$percentage <- relNem$meanRA*100
relNem <- relNem[order(relNem$meanRA),]
relNem$sdRA <- NULL
relNem$maxRA <- NULL
sink("tmp/relNem.txt")
relNem
sink()

sum(relApi$percentage)
sum(relpla$percentage)

# 5 families within phyla Apicomplexa (+1 NA)
relApi <- summarize_taxa(PSapi, "family", "all")
relApi$percentage <- relApi$meanRA*100
relApi <- relApi[order(relApi$meanRA),]
relApi$sdRA <- NULL
relApi$maxRA <- NULL
sink("tmp/relApi.txt")
relApi
sink()

# 1 families within phyla Apicomplexa
relpla <- summarize_taxa(PSpla, "family", "all")
relpla$percentage <- relpla$meanRA*100
relpla <- relpla[order(relpla$meanRA),]
relpla$sdRA <- NULL
relpla$minRA <- NULL

sink("tmp/relpla.txt")
relpla
sink()

## ploting parasite abundace at family level
relNemSorted <- relNem %>%
      mutate(family = fct_reorder(family, meanRA))
relNemSorted %>%
    group_by(family)%>%
    mutate(family_avg=mean(meanRA))%>%
    mutate(Main_family=family_avg>=0.01) -> relNemSorted
relNemSorted %>%
  mutate(family=fct_reorder(family, meanRA, .fun="mean"))%>%
  ggplot(aes(x = reorder(family, meanRA), y = meanRA, color= family)) +
      coord_flip() +
      scale_y_continuous(limits = c(0, 1), expand = c(0.005, 0.005)) +
      labs(x = NULL, y = "Relative abundance") +
      theme(legend.position = "none")+
      #theme_classic()+
      #geom_hline(aes(yintercept = sample_avg), color = "gray70", size = 0.6) +
      geom_jitter(size = 2, alpha = 0.5, width = 0.2)+
    stat_summary(fun = mean, geom = "point", size = 1, color= "black")+
    theme_minimal()+
    theme(legend.position="none")-> NemAb

png(filename = "fig/Nematoda_ab.png",
        width =4, height = 5, units = "in", res= 400)

NemAb

dev.off()

relApiSorted <- relApi %>%
      mutate(family = fct_reorder(family, meanRA))
relApiSorted %>%
    group_by(family)%>%
    mutate(family_avg=mean(meanRA))%>%
    mutate(Main_family=family_avg>=0.01) -> relApiSorted
relApiSorted %>%
  mutate(family=fct_reorder(family, meanRA, .fun="mean"))%>%
  ggplot(aes(x = reorder(family, meanRA), y = meanRA, color= family)) +
      coord_flip() +
      scale_y_continuous(limits = c(0, 1), expand = c(0.005, 0.005)) +
      labs(x = NULL, y = "Relative abundance") +
      theme(legend.position = "none")+
    theme_minimal()+
    theme(legend.position="none")+
      #geom_hline(aes(yintercept = sample_avg), color = "gray70", size = 0.6) +
      geom_jitter(size = 2, alpha = 0.5, width = 0.2)+
      stat_summary(fun = mean, geom = "point", size = 1, color= "black") -> ApiAb

png(filename = "fig/Apicomplexa_ab.png",
        width =4, height = 5, units = "in", res= 400)

ApiAb

dev.off()

relplaSorted <- relpla %>%
      mutate(family = fct_reorder(family, meanRA))
relplaSorted %>%
    group_by(family)%>%
    mutate(family_avg=mean(meanRA))%>%
    mutate(Main_family=family_avg>=0.01) -> relplaSorted
relplaSorted %>%
  mutate(family=fct_reorder(family, meanRA, .fun="mean"))%>%
  ggplot(aes(x = reorder(family, meanRA), y = meanRA, color= family)) +
      coord_flip() +
      scale_y_continuous(limits = c(0, 1), expand = c(0.005, 0.005)) +
      labs(x = NULL, y = "Relative abundance") +
      theme(legend.position = "none")+
      #theme_classic()+
      #geom_hline(aes(yintercept = sample_avg), color = "gray70", size = 0.6) +
      geom_jitter(size = 2, alpha = 0.5, width = 0.2)+
    stat_summary(fun = mean, geom = "point", size = 1, color= "black")+
    theme_minimal()-> plaAb
png(filename = "fig/Platyhelm_ab.png",
        width =4, height = 2, units = "in", res= 400)
plaAb
dev.off()

## Testing Eimeriidae correlation with OPG
cor.test(PSrare@sam_data$OPG_Eimeria, rowSums(otu_table(subset_taxa(PSrare, family%in%"Eimeriidae"))), method ="spearman")

cor.test(PSrare@sam_data$OPG_Eimeria, sample_data(PSrare)$eimASV, method ="spearman")

png(filename = "fig/Oocysts_Eimeriidae-rare.png",
        width =4, height = 5, units = "in", res= 300)

ggplot(PSrare@sam_data, aes(x=PSrare@sam_data$OPG_Eimeria)) +
    geom_jitter(aes(y=sample_data(PSrare)$eimASV))+
    xlab("Eimeria OPG")+ ylab("ASV's Eimeriidae abundance - rarefied")+
    annotate(geom="text", label="Spearman rho=0.48, p<0.001", x=305500, y=0.6, color="gray9")+
    theme_classic()

dev.off()

#####################################################
################# Abundances per domain
euPS <- subset_taxa(PS, superkingdom%in%"Eukaryota")
baPS<- subset_taxa(PS, superkingdom%in%"Bacteria")
ePSphy <- tax_glom(euPS, "phylum")
bPSphy <- tax_glom(baPS, "phylum")

########################
# Abundance plotting for eukarya
#########################
ePS1 <- euPS %>%
        aggregate_taxa(level = "phylum") %>%
                      microbiome::transform(transform = "compositional")
nb.cols <- length(get_taxa_unique(ePS1, "phylum"))
coul <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)

ePS1 %>%
    plot_composition(sample.sort ="neatmap", otu.sort = "abundance") +
    scale_fill_manual(values = coul) +
    labs(fill="Phyla")+
    scale_y_continuous(label = scales::percent)+
    theme_classic()+
    theme(axis.text.x=element_blank(),
          legend.position = "none") -> eukaryaComp

pdf("fig/figures4man/EukAbundance_phylaNL.pdf",
        width =5, height = 5)
eukaryaComp
dev.off()

bPS1 <- baPS %>%
        aggregate_taxa(level = "phylum") %>%
                      microbiome::transform(transform = "compositional")
nb.cols <- length(get_taxa_unique(baPS, "phylum"))
coul <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)

bPS1 %>%
    plot_composition(sample.sort ="neatmap", otu.sort = "abundance") +
    scale_fill_manual(values = coul) +
    labs(fill="Phyla")+
    scale_y_continuous(label = scales::percent)+
    theme_classic()+
    theme(axis.text.x=element_blank()) -> bacComp

pdf("fig/figures4man/BacAbundance_phyla.pdf",
        width =5, height = 5)
bacComp
dev.off()

######################### average relative abundance plotting
sample_data(euPS)$all <- "one"
sample_data(baPS)$all <- "one"

erelphy=summarize_taxa(euPS, "phylum", "all")
brelphy=summarize_taxa(baPS, "phylum", "all")

# for eukarya
erelphy$percentage <-  erelphy$meanRA*100
erelphy2 <- erelphy[erelphy$percentage>1,]
erelphy3 <- erelphy[erelphy$percentage<1,]
df <- data.frame(phylum="Phyla < 1%",
                 all="one",
                 meanRA=sum(erelphy3$meanRA),
                 sdRA=sum(erelphy3$sdRA),
                 minRA=sum(erelphy3$minRA),
                 maxRA=sum(erelphy3$maxRA),
                 percentage=sum(erelphy3$percentage))
erelphy <- rbind(erelphy2, df)
erelphy <- erelphy[order(erelphy$meanRA),]
erelphy$phylum[8] <- "Unknown"
## prevalence plotting
pdf("fig/figures4man/EukRELabundance_phyla.pdf",
        width =4, height =5)
ggplot(erelphy, aes(y=percentage, x=all, fill=factor(phylum, levels=erelphy$phylum)))+
    geom_col(position="stack", colour = "black", width = 0.3)+
#    coord_flip()+
    scale_fill_brewer(palette="Dark2")+
    labs(y="Average relative abundance", fill="")+
    theme(axis.title.x=element_blank(),
          axis.text.x=element_blank(),
          axis.ticks.x=element_blank(),
          panel.background = element_blank(),
          text = element_text(size=10),
          legend.text = element_text(size = 9))
#          legend.position = "none")
dev.off()

# for bacteria
brelphy$percentage <-  brelphy$meanRA*100
brelphy2 <- brelphy[brelphy$percentage>1,]
brelphy3 <- brelphy[brelphy$percentage<1,]

brelphy3

df <- data.frame(phylum="Phyla < 1%",
                 all="one",
                 meanRA=sum(brelphy3$meanRA),
                 sdRA=sum(brelphy3$sdRA),
                 minRA=sum(brelphy3$minRA),
                 maxRA=sum(brelphy3$maxRA),
                 percentage=sum(brelphy3$percentage))

brelphy <- rbind(brelphy2, df)
brelphy <- brelphy[order(brelphy$meanRA),]

brelphy

erelphy

brelphy$phylum[4] <- "Unknown"

## prevalence plotting
pdf("fig/figures4man/BacRELabundance_phyla.pdf",
        width =4, height =5)
ggplot(brelphy, aes(y=percentage, x=all, fill=factor(phylum, levels=brelphy$phylum)))+
    geom_col(position="stack", colour = "black", width = 0.3)+
#    coord_flip()+
    scale_fill_brewer(palette="Dark2")+
    labs(y="Average relative abundance", fill="")+
    theme(axis.title.x=element_blank(),
          axis.text.x=element_blank(),
          axis.ticks.x=element_blank(),
          panel.background = element_blank(),
          text = element_text(size=10),
          legend.text = element_text(size = 9))
#          legend.position = "none")
dev.off()

### to erase

cryp <- ("GTGAAGATTTTGATAACAGACTCGTAGAATTCTGTGTACAAGATTTCAAGAGAAAGAATAGAGGTATGGATTTAACTACAAATGCTAGAGCTTTAAGAAGACTCAGAACTCAATGTGAGCGTGCAAAGAGAACTTTGTCATCTTCTACTCAAGCTACAATTGAGTTAGATTCACTCTATGAAGGTATTGATTATTCAGTTGCCATCAGTAGAGCTAGATTCGAAGAACTCTGCGCTGATTACTTCCGTGCAACTTTAGCTCCAGTTGAGAAAGTACTCAAG")

eim <- ("ATACGGAGGATGCGAGCGTTATCCGGATTTATTGGGTTTAAAGGGTGCGTAGGCGGTCCGTTAAGTCAGCGGTAAAATTGCGGGGCTCAACCCCGTCGAGCCGTTGAAACTGGCAGACTTGAGTTGGCGAGAAGTACGCGGAATGCGCGGTGTAGCGGTGAAATGCATAGATATCGCGCAGAACTCCGATTGCGAAGGCAGCGTACCGGCGCCAGACTGACGCTGAGGCACGAAAGCGTGGGGATCGAACAGGA")

eim2 <- ("ATACGTAGGGTGCGAGCGTTAATCGGAATTACTGGGCGTAAAGGGTGTGCAGGCGGCTGAGTAAGACAGATGTGAAATCCCCGGGCTTAACCTGGGAACCGCATATGTGACTGCTTGGCTAGAGTGCGTCAGAGGGAGGTGGAATTCCACGTGTAGCAGTGAAATGCGTAGATATGTGGAAGAACACCGATGGCGAAGGCAGCCTCCTGGGACGCAACTGACGCTCATACACGAAAGCGTGGGGAGCAAACAGGA")

tax_table(PS)[eim2, 6]

subset_taxa(PS, )


p10PPS=phyloseq_filter_prevalence(pPS, prev.trh=0.1)

tax_table(p10PPS)[eim2, 5]

tax_table(p10PPS)[eim, 6]
